<h1>Editing Cat</h1>

<%= render 'form', cat: @cat %>

<%= link_to 'Show', @cat %> |
<%= link_to 'Back', cats_path %>



<form id="upload" action="upload.php" method="POST" enctype="multipart/form-data">

<fieldset>
<legend>HTML File Upload</legend>

<input type="hidden" id="MAX_FILE_SIZE" name="MAX_FILE_SIZE" value="300000" />

<div>
	<label for="fileselect">Files to upload:</label>
	<input type="file" id="fileselect" name="fileselect[]" multiple="multiple" />
	<div id="filedrag">or drop files here</div>
</div>

<div id="submitbutton">
	<button type="submit">Upload Files</button>
</div>

</fieldset>

</form>

<script>

function rager(){
	var src = $('#fuck').attr('src');
	//console.log("##########################################")
	console.log(src)
	alert(src);
}
</script>
<button type="button" onclick="rager();">Click Me!</button>
<button type="button" onclick="createCat();">Create Cat</button>

<div id="messages">
<p>Status Messages</p>
</div>
<p>https://www.sitepoint.com/html5-file-drag-and-drop/</p>
<div id="test1234"></div>


<style>
#filedrag
{
	display: none;
	font-weight: bold;
	text-align: center;
	padding: 1em 0;
	margin: 1em 0;
	color: #555;
	border: 2px dashed #555;
	border-radius: 7px;
	cursor: default;
}

#filedrag.hover
{
	color: #f00;
	border-color: #f00;
	border-style: solid;
	box-shadow: inset 0 3px 4px #888;
}
</style>
<script>
	// getElementById
	function $id(id) {
		return document.getElementById(id);
	}
	// output information
	function Output(msg) {
		var m = $id("messages");
		m.innerHTML = msg + m.innerHTML;
	}
	// call initialization file
	if (window.File && window.FileList && window.FileReader) {
		Init();
	}
	// initialize
	function Init() {

		var fileselect = $id("fileselect"),
		filedrag = $id("filedrag"),
		submitbutton = $id("submitbutton");
		// file select
		fileselect.addEventListener("change", FileSelectHandler, false);

		// is XHR2 available?
		var xhr = new XMLHttpRequest();
		if (xhr.upload) {
			// file drop
			filedrag.addEventListener("dragover", FileDragHover, false);
			filedrag.addEventListener("dragleave", FileDragHover, false);
			filedrag.addEventListener("drop", FileSelectHandler, false);
			filedrag.style.display = "block";
			// remove submit button
			submitbutton.style.display = "none";
		}
	}

	// file drag hover
	function FileDragHover(e) {
		e.stopPropagation();
		e.preventDefault();
		e.target.className = (e.type == "dragover" ? "hover" : "");
	}

	// file selection
	function FileSelectHandler(e) {
		// cancel event and hover styling
		FileDragHover(e);
		// fetch FileList object
		var files = e.target.files || e.dataTransfer.files;
		for (var i = 0; i < files.length; ++i){
	  	reader = new FileReader();
			console.log( reader.readAsDataURL(files[i]) )
		  reader.onload = function (event) {
				var img_div = $("#test1234")[0];
				var img = document.createElement("img");
				img.src = event.target.result;
		    img_div.appendChild(img);
			};
		}
		// process all File objects
		for (var i = 0, f; f = files[i]; i++) {
			ParseFile(f);
		}
	}

	function ParseFile(file) {
	  //  var img = $("#avatar_img")[0];
	  //  img.src = event.target.result;
		Output(
			"<p>File information: <strong>" + file.name +
			"</strong> type: <strong>" + file.type +
			"</strong> size: <strong>" + file.size +
			"</strong> bytes</p>"
		);
	}


	function createCat(){
		var images = $('#test1234').find('img').map(function() { return this.src; }).get()






cat_images = []

		for (var i = 0; i < images.length; ++i){
			cat_images.push( {image: images[i] } )
		}


		info = {
				cat:{
						 name: "test 8:32",
						 attachments_attributes: cat_images
					 }};





jQuery.ajax({
		url: "http://localhost:3000/cats/",
		type: "POST",
		dataType: "JSON",
		data: info,
		success: function (response) {
			// You can see the full response object in
			// Chrome developer tools, console
			// console.log(response)
			alert("Name: " + response.name + " ID:" + response.id );
		}
});



	}

</script>



<br/>
<br/>https://stackoverflow.com/questions/18101673/jquery-get-all-src-of-images-in-div-and-put-into-field
<br/>var images = $('#imageHolder').find('img').map(function() { return this.src; }).get()
<br/>need to check on the array size once it hits the controller, accepts_nested_attributes may not be used after all
